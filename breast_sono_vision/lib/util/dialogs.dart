import 'package:breast_sono_vision/core/color_palette.dart';
import 'package:breast_sono_vision/widget/info_card.dart';
import 'package:flutter/material.dart';

Future<void> showDisclaimerDialog({
  required BuildContext context,
  required void Function()? onPressed,
}) async {
  final alertDialog = AlertDialog(
    backgroundColor: Colors.transparent,
    contentPadding: EdgeInsets.zero,
    content: Column(
      mainAxisSize: MainAxisSize.min,
      children: [
        InfoCard(
          icon: 'ðŸš¨',
          title: 'Disclaimer',
          description: const [
            TextSpan(text: '\nThis result is generated by an AI model and is '),
            TextSpan(
              text: 'not a medical diagnosis',
              style: TextStyle(
                fontWeight: FontWeight.bold,
              ),
            ),
            TextSpan(
                text:
                    '.\n\nPlease consult a healthcare professional for a full evaluation and proper medical advice.'),
          ],
          bottomWidgets: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              const SizedBox(height: 10),
              Align(
                alignment: Alignment.centerRight,
                child: OutlinedButton(
                  style: OutlinedButton.styleFrom(
                    foregroundColor: ColorPalette.onBackground,
                    side: const BorderSide(
                      color: ColorPalette.border,
                      width: 2,
                    ),
                  ),
                  onPressed: onPressed,
                  child: const Text(
                    'Understood',
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    ),
  );

  await showGeneralDialog(
    context: context,
    barrierDismissible: false,
    barrierColor: Colors.black.withOpacity(0.35),
    transitionDuration: const Duration(milliseconds: 350),
    pageBuilder: (context, animation, secondaryAnimation) => Container(),
    transitionBuilder: (context, animation, secondaryAnimation, child) =>
        ScaleTransition(
      scale: Tween<double>(
        begin: 0.5,
        end: 1.0,
      ).animate(CurvedAnimation(
        parent: animation,
        curve: Curves.easeOutBack,
      )),
      child: FadeTransition(
        opacity: Tween<double>(
          begin: 0.0,
          end: 1.0,
        ).animate(CurvedAnimation(
          parent: animation,
          curve: Curves.easeIn,
        )),
        child: alertDialog,
      ),
    ),
  );
}
